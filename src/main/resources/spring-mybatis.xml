<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:c="http://www.springframework.org/schema/c" xmlns:util="http://www.springframework.org/schema/util"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:ehcache="http://www.springmodules.org/schema/ehcache"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd  
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd  
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd  
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd  
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd  
        http://www.springmodules.org/schema/ehcache http://www.springmodules.org/schema/cache/springmodules-ehcache.xsd">
    <!-- 引入属性文件 -->
    <context:property-placeholder location="classpath:jdbc.properties" />


    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
        destroy-method="close">
        <property name="driverClass" value="${driver}" />
        <property name="jdbcUrl" value="${url}" />
        <property name="user" value="root" />
        <property name="password" value="${password}" />
        <!-- 连接池保持的最小连接数,default : 3 -->
        <!-- <property name="minPoolSize" value="1" /> -->
        <!-- 连接池中拥有的最大连接数，如果获得新连接时会使连接总数超过这个值则不会再获取新连接， 而是等待其他连接释放，所以这个值有可能会设计地很大,default 
            : 15 -->
        <property name="maxPoolSize" value="20" />
        <!-- 连接的最大空闲时间，如果超过这个时间，某个数据库连接还没有被使用， 则会断开掉这个连接。如果为0，则永远不会断开连接,即回收此连接 -->
        <property name="maxIdleTime" value="1800" />
        <!-- 连接池在无空闲连接可用时一次性创建的新数据库连接数,default : 3 -->
        <property name="acquireIncrement" value="2" />
        <!-- 连接池为数据源缓存的PreparedStatement的总数。 -->
        <property name="maxStatements" value="30" />
        <!-- 连接池初始化时创建的连接数,default : 3 -->
        <!-- <property name="initialPoolSize" value="2" /> -->
        <!-- 用来配置测试空闲连接的间隔时间。 -->
        <property name="idleConnectionTestPeriod" value="120" />
        <!-- 连接池在获得新连接失败时重试的次数，如果小于等于0则无限重试直至连接获得成功。default : 30 -->
        <property name="acquireRetryAttempts" value="10" />
        <!-- 如果为true，则当连接获取失败时自动关闭数据源，除非重新启动应用程序。所以一般不用。default : false -->
        <property name="breakAfterAcquireFailure" value="false" />
        <!-- 性能消耗大。如果为true，在每次getConnection的时候都会测试，为了提高性能,尽量不要用。 -->
        <property name="testConnectionOnCheckout" value="false" />
    </bean>


    <!-- myBatis文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <!-- 当mybatis的xml文件和mapper接口不在相同包下时，需要用mapperLocations属性指定xml文件的路径。 *是个通配符，代表所有的文件，**代表所有目录下 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml" 
            /> 
    </bean>


    <!-- MapperScannerConfigurer会自动扫描basePackage指定的包，找到映射接口类和映射XML文件，并进行注入 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.ambow.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>
    <!-- 配置事务管理器 -->
    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>


    <!-- 配置事物的注解方式注入 -->
    <!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->
    <!-- 拦截器方式配置事物 -->
    <!-- <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="modify*" propagation="REQUIRED" />
            <tx:method name="edit*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />
            <tx:method name="remove*" propagation="REQUIRED" />
            <tx:method name="repair" propagation="REQUIRED" />
            <tx:method name="*" propagation="SUPPORTS" />
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="transactionPointcut"
            expression="execution(* com.ambow.service..*.*(..))" />
        <aop:advisor pointcut-ref="transactionPointcut"
            advice-ref="transactionAdvice" />
    </aop:config>-->


    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
        <constructor-arg index="1" value="BATCH" />
    </bean>


</beans>  